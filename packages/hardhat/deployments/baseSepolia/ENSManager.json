{
  "address": "0x7a58069532202c1bB06CD61A36b470AC89E90fF9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_parentNode",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_baseDomain",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "subname",
          "type": "string"
        }
      ],
      "name": "SubnameRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToSubname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseDomain",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getFullName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "isAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentNode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "registerSubname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "subnameOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x974a806a1347a8d5519b7f438fb4a5764275d60d86c56c2f18447a9d5f0371a0",
  "receipt": {
    "to": null,
    "from": "0x065505c4fD54b71f03e6b8A7ef77acB443A80845",
    "contractAddress": "0x7a58069532202c1bB06CD61A36b470AC89E90fF9",
    "transactionIndex": 7,
    "gasUsed": "689649",
    "logsBloom": "0x
    "blockHash": "0x508389499ef98ab67cce89294ff2eaf207912498618bb3e949a8068457dd6416",
    "transactionHash": "0x974a806a1347a8d5519b7f438fb4a5764275d60d86c56c2f18447a9d5f0371a0",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 30676320,
        "transactionHash": "0x974a806a1347a8d5519b7f438fb4a5764275d60d86c56c2f18447a9d5f0371a0",
        "address": "0x7a58069532202c1bB06CD61A36b470AC89E90fF9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000065505c4fd54b71f03e6b8a7ef77acb443a80845"
        ],
        "data": "0x",
        "logIndex": 24,
        "blockHash": "0x508389499ef98ab67cce89294ff2eaf207912498618bb3e949a8068457dd6416"
      }
    ],
    "blockNumber": 30676320,
    "cumulativeGasUsed": "2620533",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa435790cbb48104923f7787ee104159797c518dbce39e79556e84e90fe7614af",
    "hirex.eth"
  ],
  "numDeployments": 2,
  "solcInputHash": "7a55eebd77a2b40d405a8b6e77a1ea9c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_baseDomain\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"subname\",\"type\":\"string\"}],\"name\":\"SubnameRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToSubname\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseDomain\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFullName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"isAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"registerSubname\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"subnameOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock ENSManager for hackathon use \\u2014 does not actually call ENS NameWrapper.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFullName(address)\":{\"notice\":\"Get full ENS name for a user \"},\"isAvailable(string)\":{\"notice\":\"Check if a subname is available \"},\"registerSubname(address,string)\":{\"notice\":\"Register a subname for a specific user (mock, no ENS interaction) \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnsManager.sol\":\"ENSManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/EnsManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/// @dev Mock ENSManager for hackathon use \\u2014 does not actually call ENS NameWrapper.\\ncontract ENSManager is Ownable {\\n    bytes32 public parentNode;\\n    string public baseDomain;\\n\\n    mapping(string => address) public subnameOwners;\\n    mapping(address => string) public addressToSubname;\\n\\n    event SubnameRegistered(address indexed user, string subname);\\n\\n    constructor(bytes32 _parentNode, string memory _baseDomain) Ownable(msg.sender) {\\n        parentNode = _parentNode;\\n        baseDomain = _baseDomain;\\n    }\\n\\n    /** @notice Check if a subname is available */\\n    function isAvailable(string calldata name) public view returns (bool) {\\n        return subnameOwners[name] == address(0);\\n    }\\n\\n    /** @notice Register a subname for a specific user (mock, no ENS interaction) */\\n    function registerSubname(address _user, string calldata name) external returns (string memory) {\\n        require(isAvailable(name), \\\"Subname already taken\\\");\\n\\n        // Map ownership to the provided user, not msg.sender\\n        subnameOwners[name] = _user;\\n        addressToSubname[_user] = name;\\n\\n        // Just return <name>.<baseDomain>, no ENS calls\\n        string memory fullName = string(abi.encodePacked(name, \\\".\\\", baseDomain));\\n\\n        emit SubnameRegistered(_user, fullName);\\n        return fullName;\\n    }\\n\\n    /** @notice Get full ENS name for a user */\\n    function getFullName(address user) external view returns (string memory) {\\n        string memory name = addressToSubname[user];\\n        if (bytes(name).length == 0) return \\\"\\\";\\n        return string(abi.encodePacked(name, \\\".\\\", baseDomain));\\n    }\\n}\\n\",\"keccak256\":\"0x39886fe3f524bc4f1464f6b35c4c0f711163c488fe57e948eaece45c20d9ecc1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000d3c38038062000d3c8339810160408190526200003491620000e9565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000668162000083565b50600182905560026200007a828262000258565b50505062000324565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215620000fd57600080fd5b8251602080850151919350906001600160401b03808211156200011f57600080fd5b818601915086601f8301126200013457600080fd5b815181811115620001495762000149620000d3565b604051601f8201601f19908116603f01168101908382118183101715620001745762000174620000d3565b8160405282815289868487010111156200018d57600080fd5b600093505b82841015620001b1578484018601518185018701529285019262000192565b60008684830101528096505050505050509250929050565b600181811c90821680620001de57607f821691505b602082108103620001ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025357600081815260208120601f850160051c810160208610156200022e5750805b601f850160051c820191505b818110156200024f578281556001016200023a565b5050505b505050565b81516001600160401b03811115620002745762000274620000d3565b6200028c81620002858454620001c9565b8462000205565b602080601f831160018114620002c45760008415620002ab5750858301515b600019600386901b1c1916600185901b1785556200024f565b600085815260208120601f198616915b82811015620002f557888601518255948401946001909101908401620002d4565b5085821015620003145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610a0880620003346000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063e251db7b11610066578063e251db7b14610126578063f0cb392514610139578063f2f35ff51461016d578063f2fde38b14610180578063f3068a001461019357600080fd5b806348136c97146100a357806363996b66146100c1578063715018a6146100d45780638da5cb5b146100de578063965306aa14610103575b600080fd5b6100ab6101aa565b6040516100b89190610595565b60405180910390f35b6100ab6100cf3660046105e4565b610238565b6100dc610251565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b8565b61011661011136600461064f565b610265565b60405190151581526020016100b8565b6100ab610134366004610691565b6102a5565b6100eb6101473660046106fa565b80516020818301810180516003825292820191909301209152546001600160a01b031681565b6100ab61017b3660046105e4565b6103c4565b6100dc61018e3660046105e4565b6104b6565b61019c60015481565b6040519081526020016100b8565b600280546101b7906107ab565b80601f01602080910402602001604051908101604052809291908181526020018280546101e3906107ab565b80156102305780601f1061020557610100808354040283529160200191610230565b820191906000526020600020905b81548152906001019060200180831161021357829003601f168201915b505050505081565b600460205260009081526040902080546101b7906107ab565b6102596104f4565b6102636000610521565b565b6000806001600160a01b0316600384846040516102839291906107e5565b908152604051908190036020019020546001600160a01b031614905092915050565b60606102b18383610265565b6102fa5760405162461bcd60e51b815260206004820152601560248201527429bab13730b6b29030b63932b0b23c903a30b5b2b760591b60448201526064015b60405180910390fd5b836003848460405161030d9291906107e5565b908152604080516020928190038301902080546001600160a01b0319166001600160a01b039485161790559186166000908152600490915220610351838583610844565b5060008383600260405160200161036a93929190610978565b6040516020818303038152906040529050846001600160a01b03167fd6c63362dc701a126f9dcf34485680e4a33bddce503b41a1ac19ca10b4e79434826040516103b49190610595565b60405180910390a2949350505050565b6001600160a01b0381166000908152600460205260408120805460609291906103ec906107ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610418906107ab565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b50505050509050805160000361048b575050604080516020810190915260008152919050565b80600260405160200161049f92919061099f565b604051602081830303815290604052915050919050565b6104be6104f4565b6001600160a01b0381166104e857604051631e4fbdf760e01b8152600060048201526024016102f1565b6104f181610521565b50565b6000546001600160a01b031633146102635760405163118cdaa760e01b81523360048201526024016102f1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8381101561058c578181015183820152602001610574565b50506000910152565b60208152600082518060208401526105b4816040850160208701610571565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146105df57600080fd5b919050565b6000602082840312156105f657600080fd5b6105ff826105c8565b9392505050565b60008083601f84011261061857600080fd5b50813567ffffffffffffffff81111561063057600080fd5b60208301915083602082850101111561064857600080fd5b9250929050565b6000806020838503121561066257600080fd5b823567ffffffffffffffff81111561067957600080fd5b61068585828601610606565b90969095509350505050565b6000806000604084860312156106a657600080fd5b6106af846105c8565b9250602084013567ffffffffffffffff8111156106cb57600080fd5b6106d786828701610606565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561070c57600080fd5b813567ffffffffffffffff8082111561072457600080fd5b818401915084601f83011261073857600080fd5b81358181111561074a5761074a6106e4565b604051601f8201601f19908116603f01168101908382118183101715610772576107726106e4565b8160405282815287602084870101111561078b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806107bf57607f821691505b6020821081036107df57634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b601f82111561083f57600081815260208120601f850160051c8101602086101561081c5750805b601f850160051c820191505b8181101561083b57828155600101610828565b5050505b505050565b67ffffffffffffffff83111561085c5761085c6106e4565b6108708361086a83546107ab565b836107f5565b6000601f8411600181146108a4576000851561088c5750838201355b600019600387901b1c1916600186901b1783556108fe565b600083815260209020601f19861690835b828110156108d557868501358255602094850194600190920191016108b5565b50868210156108f25760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008154610912816107ab565b6001828116801561092a576001811461093f5761096e565b60ff198416875282151583028701945061096e565b8560005260208060002060005b858110156109655781548a82015290840190820161094c565b50505082870194505b5050505092915050565b828482376000838201601760f91b81526109956001820185610905565b9695505050505050565b600083516109b1818460208801610571565b601760f91b9083019081526109c96001820185610905565b9594505050505056fea26469706673582212201453098b02855e3a4df05f8fbc57ae8429ebcf7e53202199dc656488d7ea9e3f64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063e251db7b11610066578063e251db7b14610126578063f0cb392514610139578063f2f35ff51461016d578063f2fde38b14610180578063f3068a001461019357600080fd5b806348136c97146100a357806363996b66146100c1578063715018a6146100d45780638da5cb5b146100de578063965306aa14610103575b600080fd5b6100ab6101aa565b6040516100b89190610595565b60405180910390f35b6100ab6100cf3660046105e4565b610238565b6100dc610251565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b8565b61011661011136600461064f565b610265565b60405190151581526020016100b8565b6100ab610134366004610691565b6102a5565b6100eb6101473660046106fa565b80516020818301810180516003825292820191909301209152546001600160a01b031681565b6100ab61017b3660046105e4565b6103c4565b6100dc61018e3660046105e4565b6104b6565b61019c60015481565b6040519081526020016100b8565b600280546101b7906107ab565b80601f01602080910402602001604051908101604052809291908181526020018280546101e3906107ab565b80156102305780601f1061020557610100808354040283529160200191610230565b820191906000526020600020905b81548152906001019060200180831161021357829003601f168201915b505050505081565b600460205260009081526040902080546101b7906107ab565b6102596104f4565b6102636000610521565b565b6000806001600160a01b0316600384846040516102839291906107e5565b908152604051908190036020019020546001600160a01b031614905092915050565b60606102b18383610265565b6102fa5760405162461bcd60e51b815260206004820152601560248201527429bab13730b6b29030b63932b0b23c903a30b5b2b760591b60448201526064015b60405180910390fd5b836003848460405161030d9291906107e5565b908152604080516020928190038301902080546001600160a01b0319166001600160a01b039485161790559186166000908152600490915220610351838583610844565b5060008383600260405160200161036a93929190610978565b6040516020818303038152906040529050846001600160a01b03167fd6c63362dc701a126f9dcf34485680e4a33bddce503b41a1ac19ca10b4e79434826040516103b49190610595565b60405180910390a2949350505050565b6001600160a01b0381166000908152600460205260408120805460609291906103ec906107ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610418906107ab565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b50505050509050805160000361048b575050604080516020810190915260008152919050565b80600260405160200161049f92919061099f565b604051602081830303815290604052915050919050565b6104be6104f4565b6001600160a01b0381166104e857604051631e4fbdf760e01b8152600060048201526024016102f1565b6104f181610521565b50565b6000546001600160a01b031633146102635760405163118cdaa760e01b81523360048201526024016102f1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8381101561058c578181015183820152602001610574565b50506000910152565b60208152600082518060208401526105b4816040850160208701610571565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146105df57600080fd5b919050565b6000602082840312156105f657600080fd5b6105ff826105c8565b9392505050565b60008083601f84011261061857600080fd5b50813567ffffffffffffffff81111561063057600080fd5b60208301915083602082850101111561064857600080fd5b9250929050565b6000806020838503121561066257600080fd5b823567ffffffffffffffff81111561067957600080fd5b61068585828601610606565b90969095509350505050565b6000806000604084860312156106a657600080fd5b6106af846105c8565b9250602084013567ffffffffffffffff8111156106cb57600080fd5b6106d786828701610606565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561070c57600080fd5b813567ffffffffffffffff8082111561072457600080fd5b818401915084601f83011261073857600080fd5b81358181111561074a5761074a6106e4565b604051601f8201601f19908116603f01168101908382118183101715610772576107726106e4565b8160405282815287602084870101111561078b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806107bf57607f821691505b6020821081036107df57634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b601f82111561083f57600081815260208120601f850160051c8101602086101561081c5750805b601f850160051c820191505b8181101561083b57828155600101610828565b5050505b505050565b67ffffffffffffffff83111561085c5761085c6106e4565b6108708361086a83546107ab565b836107f5565b6000601f8411600181146108a4576000851561088c5750838201355b600019600387901b1c1916600186901b1783556108fe565b600083815260209020601f19861690835b828110156108d557868501358255602094850194600190920191016108b5565b50868210156108f25760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008154610912816107ab565b6001828116801561092a576001811461093f5761096e565b60ff198416875282151583028701945061096e565b8560005260208060002060005b858110156109655781548a82015290840190820161094c565b50505082870194505b5050505092915050565b828482376000838201601760f91b81526109956001820185610905565b9695505050505050565b600083516109b1818460208801610571565b601760f91b9083019081526109c96001820185610905565b9594505050505056fea26469706673582212201453098b02855e3a4df05f8fbc57ae8429ebcf7e53202199dc656488d7ea9e3f64736f6c63430008140033",
  "devdoc": {
    "details": "Mock ENSManager for hackathon use — does not actually call ENS NameWrapper.",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getFullName(address)": {
        "notice": "Get full ENS name for a user "
      },
      "isAvailable(string)": {
        "notice": "Check if a subname is available "
      },
      "registerSubname(address,string)": {
        "notice": "Register a subname for a specific user (mock, no ENS interaction) "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/EnsManager.sol:ENSManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 185,
        "contract": "contracts/EnsManager.sol:ENSManager",
        "label": "parentNode",
        "offset": 0,
        "slot": "1",
        "type": "t_bytes32"
      },
      {
        "astId": 187,
        "contract": "contracts/EnsManager.sol:ENSManager",
        "label": "baseDomain",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 191,
        "contract": "contracts/EnsManager.sol:ENSManager",
        "label": "subnameOwners",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 195,
        "contract": "contracts/EnsManager.sol:ENSManager",
        "label": "addressToSubname",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}
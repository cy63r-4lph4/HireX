{
  "address": "0x36d760E4B1AE55eF86Fd5EB928Fc2DC3C10d8D7a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_coreToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_profileContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        }
      ],
      "name": "JobAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "client",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "budget",
          "type": "uint256"
        }
      ],
      "name": "JobCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "acceptJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "cancelJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "completeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "coreToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hirer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "budget",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "createJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllJobs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "client",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "worker",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "budget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "enum JobFactory.JobStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct JobFactory.Job[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "getJob",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "client",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "worker",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "budget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "enum JobFactory.JobStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct JobFactory.Job",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenJobs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "client",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "worker",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "budget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "enum JobFactory.JobStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct JobFactory.Job[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "client",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "budget",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "enum JobFactory.JobStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profileContract",
      "outputs": [
        {
          "internalType": "contract IProfile",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe5b4cee38a3643b97f082ca5d6e7f6e40e3e7d40b0601831e7f7fdfbb3d9a255",
  "receipt": {
    "to": null,
    "from": "0x065505c4fD54b71f03e6b8A7ef77acB443A80845",
    "contractAddress": "0x36d760E4B1AE55eF86Fd5EB928Fc2DC3C10d8D7a",
    "transactionIndex": 5,
    "gasUsed": "1638189",
    "logsBloom": "0x
    "blockHash": "0xd6050abfe9cc92adffa7331f351adb1f165bb9bf97602a4c50f47780f5c094de",
    "transactionHash": "0xe5b4cee38a3643b97f082ca5d6e7f6e40e3e7d40b0601831e7f7fdfbb3d9a255",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 30682457,
        "transactionHash": "0xe5b4cee38a3643b97f082ca5d6e7f6e40e3e7d40b0601831e7f7fdfbb3d9a255",
        "address": "0x36d760E4B1AE55eF86Fd5EB928Fc2DC3C10d8D7a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000065505c4fd54b71f03e6b8a7ef77acb443a80845"
        ],
        "data": "0x",
        "logIndex": 7,
        "blockHash": "0xd6050abfe9cc92adffa7331f351adb1f165bb9bf97602a4c50f47780f5c094de"
      }
    ],
    "blockNumber": 30682457,
    "cumulativeGasUsed": "2199424",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb5d8887AB09AdB5983AACEed4e1AbB9267407823",
    "0x565A99925AEd5b53F363EBB5BfE268bBD8d414fe"
  ],
  "numDeployments": 3,
  "solcInputHash": "a6f612c5e2aeb548854d184546842788",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_profileContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"}],\"name\":\"JobAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"}],\"name\":\"JobCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"}],\"name\":\"JobCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"}],\"name\":\"JobCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"}],\"name\":\"acceptJob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"}],\"name\":\"cancelJob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"}],\"name\":\"completeJob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coreToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hirer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createJob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllJobs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum JobFactory.JobStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct JobFactory.Job[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"jobId\",\"type\":\"uint256\"}],\"name\":\"getJob\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum JobFactory.JobStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct JobFactory.Job\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenJobs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum JobFactory.JobStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct JobFactory.Job[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jobCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jobs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum JobFactory.JobStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profileContract\",\"outputs\":[{\"internalType\":\"contract IProfile\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createJob(address,string,string,uint256,uint256)\":{\"params\":{\"hirer\":\"the real client funding the job\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptJob(uint256)\":{\"notice\":\"Worker accepts job\"},\"cancelJob(uint256)\":{\"notice\":\"Client cancels before worker accepts\"},\"completeJob(uint256)\":{\"notice\":\"Client marks job as completed \\u2192 releases payment\"},\"createJob(address,string,string,uint256,uint256)\":{\"notice\":\"Client posts a job with budget locked in escrow\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JobFactory.sol\":\"JobFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/JobFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IProfile {\\n    function getProfile(\\n        address _user\\n    )\\n        external\\n        view\\n        returns (\\n            address user,\\n            string memory ensName,\\n            string memory metadataURI,\\n            bool exists,\\n            bool hasEFP,\\n            uint256 reputation\\n        );\\n}\\n\\ncontract JobFactory is Ownable {\\n    enum JobStatus {\\n        Open,\\n        Assigned,\\n        Completed,\\n        Cancelled\\n    }\\n\\n    struct Job {\\n        uint256 id;\\n        address client;\\n        address worker;\\n        string title;\\n        string metadataURI;\\n        uint256 budget;\\n        uint256 deadline;\\n        JobStatus status;\\n    }\\n\\n    IERC20 public coreToken;\\n    IProfile public profileContract;\\n\\n    uint256 public jobCount;\\n    mapping(uint256 => Job) public jobs;\\n\\n    event JobCreated(uint256 indexed jobId, address indexed client, uint256 budget);\\n    event JobAssigned(uint256 indexed jobId, address indexed worker);\\n    event JobCompleted(uint256 indexed jobId, address indexed worker);\\n    event JobCancelled(uint256 indexed jobId);\\n\\n    constructor(address _coreToken, address _profileContract) Ownable(msg.sender) {\\n        coreToken = IERC20(_coreToken);\\n        profileContract = IProfile(_profileContract);\\n    }\\n\\n    /// @notice Client posts a job with budget locked in escrow\\n    /// @param hirer the real client funding the job\\n    function createJob(\\n        address hirer,\\n        string calldata title,\\n        string calldata metadataURI,\\n        uint256 budget,\\n        uint256 deadline\\n    ) external {\\n        require(hirer != address(0), \\\"Invalid hirer\\\");\\n        require(budget > 0, \\\"Invalid budget\\\");\\n        require(deadline > block.timestamp, \\\"Deadline must be future\\\");\\n\\n        // pull tokens from hirer's wallet (not relayer)\\n        require(coreToken.transferFrom(hirer, address(this), budget), \\\"Funding failed\\\");\\n\\n        jobCount++;\\n        jobs[jobCount] = Job({\\n            id: jobCount,\\n            client: hirer,\\n            worker: address(0),\\n            title: title,\\n            metadataURI: metadataURI,\\n            budget: budget,\\n            deadline: deadline,\\n            status: JobStatus.Open\\n        });\\n\\n        emit JobCreated(jobCount, hirer, budget);\\n    }\\n\\n    /// @notice Worker accepts job\\n    function acceptJob(uint256 jobId) external {\\n        Job storage job = jobs[jobId];\\n        require(job.status == JobStatus.Open, \\\"Job not open\\\");\\n        require(job.client != msg.sender, \\\"Client cannot take own job\\\");\\n\\n        // check profile exists\\n        (, , , bool exists, , ) = profileContract.getProfile(msg.sender);\\n        require(exists, \\\"Worker must have profile\\\");\\n\\n        job.worker = msg.sender;\\n        job.status = JobStatus.Assigned;\\n\\n        emit JobAssigned(jobId, msg.sender);\\n    }\\n\\n    /// @notice Client marks job as completed \\u2192 releases payment\\n    function completeJob(uint256 jobId) external {\\n        Job storage job = jobs[jobId];\\n        require(job.status == JobStatus.Assigned, \\\"Not assigned\\\");\\n        require(job.client == msg.sender, \\\"Only client can complete\\\");\\n\\n        // \\u2705 update state first\\n        job.status = JobStatus.Completed;\\n        address worker = job.worker;\\n        uint256 amount = job.budget;\\n\\n        // then external call\\n        require(coreToken.transfer(worker, amount), \\\"Payment failed\\\");\\n\\n        emit JobCompleted(jobId, worker);\\n    }\\n\\n    /// @notice Client cancels before worker accepts\\n    function cancelJob(uint256 jobId) external {\\n        Job storage job = jobs[jobId];\\n        require(job.status == JobStatus.Open, \\\"Job not open\\\");\\n        require(job.client == msg.sender, \\\"Only client can cancel\\\");\\n\\n        job.status = JobStatus.Cancelled;\\n        uint256 refund = job.budget;\\n        address client = job.client;\\n\\n        require(coreToken.transfer(client, refund), \\\"Refund failed\\\");\\n\\n        emit JobCancelled(jobId);\\n    }\\n\\n    function getJob(uint256 jobId) external view returns (Job memory) {\\n        require(jobId > 0 && jobId <= jobCount, \\\"Invalid jobId\\\");\\n        return jobs[jobId];\\n    }\\n\\n    function getAllJobs() external view returns (Job[] memory) {\\n        Job[] memory all = new Job[](jobCount);\\n        for (uint256 i = 1; i <= jobCount; i++) {\\n            all[i - 1] = jobs[i];\\n        }\\n        return all;\\n    }\\n\\n    function getOpenJobs() external view returns (Job[] memory) {\\n        // count first\\n        uint256 count = 0;\\n        for (uint256 i = 1; i <= jobCount; i++) {\\n            if (jobs[i].status == JobStatus.Open) {\\n                count++;\\n            }\\n        }\\n        // fill array\\n        Job[] memory openJobs = new Job[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 1; i <= jobCount; i++) {\\n            if (jobs[i].status == JobStatus.Open) {\\n                openJobs[index] = jobs[i];\\n                index++;\\n            }\\n        }\\n        return openJobs;\\n    }\\n}\\n\",\"keccak256\":\"0xea8fc133019e1d0a38abaf2efff78812a55676d8aee86553d9e09bb13dc7376d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001ca338038062001ca3833981016040819052620000349162000106565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000668162000099565b50600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556200013e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010157600080fd5b919050565b600080604083850312156200011a57600080fd5b6200012583620000e9565b91506200013560208401620000e9565b90509250929050565b611b55806200014e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a3974b2111610066578063a3974b21146101ce578063bf22c457146101e1578063dd10eca814610201578063f2fde38b1461021457600080fd5b80638da5cb5b146101a2578063965a79fb146101b3578063a1c0d32f146101bb57600080fd5b80631dffa3dc116100c85780631dffa3dc1461015b5780634c5d8a0f1461017057806363b2f3c914610187578063715018a61461019a57600080fd5b80630c2b72e9146100ef5780631321c95e1461011f578063180aedf314610134575b600080fd5b600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610127610227565b60405161011691906115fd565b61014761014236600461165f565b610512565b604051610116989796959493929190611678565b61016e61016936600461165f565b610676565b005b61017960035481565b604051908152602001610116565b61016e61019536600461165f565b610834565b61016e610a10565b6000546001600160a01b0316610102565b610127610a24565b61016e6101c936600461165f565b610c82565b600254610102906001600160a01b031681565b6101f46101ef36600461165f565b610e50565b60405161011691906116e8565b61016e61020f366004611760565b611063565b61016e6102223660046117f2565b6113c6565b6060600060015b60035481116102825760008181526004602052604081206007015460ff16600381111561025d5761025d611538565b03610270578161026c81611825565b9250505b8061027a81611825565b91505061022e565b5060008167ffffffffffffffff81111561029e5761029e61183e565b6040519080825280602002602001820160405280156102d757816020015b6102c4611481565b8152602001906001900390816102bc5790505b509050600060015b60035481116105095760008181526004602052604081206007015460ff16600381111561030e5761030e611538565b036104f7576000818152600460209081526040918290208251610100810184528154815260018201546001600160a01b039081169382019390935260028201549092169282019290925260038201805491929160608401919061037090611854565b80601f016020809104026020016040519081016040528092919081815260200182805461039c90611854565b80156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b5050505050815260200160048201805461040290611854565b80601f016020809104026020016040519081016040528092919081815260200182805461042e90611854565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b50505091835250506005820154602082015260068201546040820152600782015460609091019060ff1660038111156104b6576104b6611538565b60038111156104c7576104c7611538565b815250508383815181106104dd576104dd611888565b602002602001018190525081806104f390611825565b9250505b8061050181611825565b9150506102df565b50909392505050565b600460205260009081526040902080546001820154600283015460038401805493946001600160a01b0393841694939092169261054e90611854565b80601f016020809104026020016040519081016040528092919081815260200182805461057a90611854565b80156105c75780601f1061059c576101008083540402835291602001916105c7565b820191906000526020600020905b8154815290600101906020018083116105aa57829003601f168201915b5050505050908060040180546105dc90611854565b80601f016020809104026020016040519081016040528092919081815260200182805461060890611854565b80156106555780601f1061062a57610100808354040283529160200191610655565b820191906000526020600020905b81548152906001019060200180831161063857829003601f168201915b50505050600583015460068401546007909401549293909290915060ff1688565b600081815260046020526040812090600782015460ff16600381111561069e5761069e611538565b146106df5760405162461bcd60e51b815260206004820152600c60248201526b2537b1103737ba1037b832b760a11b60448201526064015b60405180910390fd5b60018101546001600160a01b031633146107345760405162461bcd60e51b815260206004820152601660248201527513db9b1e4818db1a595b9d0818d85b8818d85b98d95b60521b60448201526064016106d6565b60078101805460ff191660031790556005810154600180830154905460405163a9059cbb60e01b81526001600160a01b039283166004820181905260248201859052929091169063a9059cbb906044016020604051808303816000875af11580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c791906118b3565b6108035760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b60448201526064016106d6565b60405184907f58243f872c550ad02802199ade99eb4250f6bb19e9abbf2d3de7b969c0eb5e4f90600090a250505050565b600081815260046020526040812090600782015460ff16600381111561085c5761085c611538565b146108985760405162461bcd60e51b815260206004820152600c60248201526b2537b1103737ba1037b832b760a11b60448201526064016106d6565b6001810154336001600160a01b03909116036108f65760405162461bcd60e51b815260206004820152601a60248201527f436c69656e742063616e6e6f742074616b65206f776e206a6f6200000000000060448201526064016106d6565b60025460405162f53a4760e41b81523360048201526000916001600160a01b031690630f53a47090602401600060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109669190810190611956565b50509350505050806109ba5760405162461bcd60e51b815260206004820152601860248201527f576f726b6572206d75737420686176652070726f66696c65000000000000000060448201526064016106d6565b6002820180546001600160a01b0319163390811790915560078301805460ff1916600117905560405184907f3738a681a43a0b6a554742a08bae57e0215e8a774217dc2e7de6c9411b6d0ddc90600090a3505050565b610a18611404565b610a226000611431565b565b6060600060035467ffffffffffffffff811115610a4357610a4361183e565b604051908082528060200260200182016040528015610a7c57816020015b610a69611481565b815260200190600190039081610a615790505b50905060015b6003548111610c7c576000818152600460209081526040918290208251610100810184528154815260018201546001600160a01b0390811693820193909352600282015490921692820192909252600382018054919291606084019190610ae890611854565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1490611854565b8015610b615780601f10610b3657610100808354040283529160200191610b61565b820191906000526020600020905b815481529060010190602001808311610b4457829003601f168201915b50505050508152602001600482018054610b7a90611854565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba690611854565b8015610bf35780601f10610bc857610100808354040283529160200191610bf3565b820191906000526020600020905b815481529060010190602001808311610bd657829003601f168201915b50505091835250506005820154602082015260068201546040820152600782015460609091019060ff166003811115610c2e57610c2e611538565b6003811115610c3f57610c3f611538565b90525082610c4e6001846119f7565b81518110610c5e57610c5e611888565b60200260200101819052508080610c7490611825565b915050610a82565b50919050565b60008181526004602052604090206001600782015460ff166003811115610cab57610cab611538565b14610ce75760405162461bcd60e51b815260206004820152600c60248201526b139bdd08185cdcda59db995960a21b60448201526064016106d6565b60018101546001600160a01b03163314610d435760405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920636c69656e742063616e20636f6d706c657465000000000000000060448201526064016106d6565b60078101805460ff19166002908117909155810154600582015460015460405163a9059cbb60e01b81526001600160a01b039384166004820181905260248201849052939091169063a9059cbb906044016020604051808303816000875af1158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd791906118b3565b610e145760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b60448201526064016106d6565b6040516001600160a01b0383169085907f16a7286196330eaff0c7db2ec34ead9c6d2d023b356b62ee7ea644c842a84b6790600090a350505050565b610e58611481565b600082118015610e6a57506003548211155b610ea65760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a9bd89259609a1b60448201526064016106d6565b6000828152600460209081526040918290208251610100810184528154815260018201546001600160a01b0390811693820193909352600282015490921692820192909252600382018054919291606084019190610f0390611854565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2f90611854565b8015610f7c5780601f10610f5157610100808354040283529160200191610f7c565b820191906000526020600020905b815481529060010190602001808311610f5f57829003601f168201915b50505050508152602001600482018054610f9590611854565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc190611854565b801561100e5780601f10610fe35761010080835404028352916020019161100e565b820191906000526020600020905b815481529060010190602001808311610ff157829003601f168201915b50505091835250506005820154602082015260068201546040820152600782015460609091019060ff16600381111561104957611049611538565b600381111561105a5761105a611538565b90525092915050565b6001600160a01b0387166110a95760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103434b932b960991b60448201526064016106d6565b600082116110ea5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908189d5919d95d60921b60448201526064016106d6565b4281116111395760405162461bcd60e51b815260206004820152601760248201527f446561646c696e65206d7573742062652066757475726500000000000000000060448201526064016106d6565b6001546040516323b872dd60e01b81526001600160a01b03898116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906118b3565b6111f35760405162461bcd60e51b815260206004820152600e60248201526d119d5b991a5b99c819985a5b195960921b60448201526064016106d6565b6003805490600061120383611825565b91905055506040518061010001604052806003548152602001886001600160a01b0316815260200160006001600160a01b0316815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815291810191908790879081908401838280828437600092018290525093855250505060208201859052604082018490526060909101526003805460009081526004602090815260409182902084518155908401516001820180546001600160a01b03199081166001600160a01b039384161790915592850151600283018054909416911617909155606083015190918201906113289082611a5f565b506080820151600482019061133d9082611a5f565b5060a0820151600582015560c0820151600682015560e082015160078201805460ff1916600183600381111561137557611375611538565b0217905550506003546040518481526001600160a01b038a1692507f8678ba2d99dba901dafc51009f8d402d37a5a0275752cf0e263b827aeca906f29060200160405180910390a350505050505050565b6113ce611404565b6001600160a01b0381166113f857604051631e4fbdf760e01b8152600060048201526024016106d6565b61140181611431565b50565b6000546001600160a01b03163314610a225760405163118cdaa760e01b81523360048201526024016106d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061010001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600060038111156114e3576114e3611538565b905290565b60005b838110156115035781810151838201526020016114eb565b50506000910152565b600081518084526115248160208601602086016114e8565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6004811061156c57634e487b7160e01b600052602160045260246000fd5b9052565b600061010082518452602083015160018060a01b038082166020870152806040860151166040870152505060608301518160608601526115b28286018261150c565b915050608083015184820360808601526115cc828261150c565b91505060a083015160a085015260c083015160c085015260e08301516115f560e086018261154e565b509392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561165257603f19888603018452611640858351611570565b94509285019290850190600101611624565b5092979650505050505050565b60006020828403121561167157600080fd5b5035919050565b8881526001600160a01b03888116602083015287166040820152610100606082018190526000906116ab8382018961150c565b905082810360808401526116bf818861150c565b9150508460a08301528360c08301526116db60e083018461154e565b9998505050505050505050565b6020815260006116fb6020830184611570565b9392505050565b6001600160a01b038116811461140157600080fd5b60008083601f84011261172957600080fd5b50813567ffffffffffffffff81111561174157600080fd5b60208301915083602082850101111561175957600080fd5b9250929050565b600080600080600080600060a0888a03121561177b57600080fd5b873561178681611702565b9650602088013567ffffffffffffffff808211156117a357600080fd5b6117af8b838c01611717565b909850965060408a01359150808211156117c857600080fd5b506117d58a828b01611717565b989b979a5095989597966060870135966080013595509350505050565b60006020828403121561180457600080fd5b81356116fb81611702565b634e487b7160e01b600052601160045260246000fd5b6000600182016118375761183761180f565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061186857607f821691505b602082108103610c7c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b805180151581146118ae57600080fd5b919050565b6000602082840312156118c557600080fd5b6116fb8261189e565b600082601f8301126118df57600080fd5b815167ffffffffffffffff808211156118fa576118fa61183e565b604051601f8301601f19908116603f011681019082821181831017156119225761192261183e565b8160405283815286602085880101111561193b57600080fd5b61194c8460208301602089016114e8565b9695505050505050565b60008060008060008060c0878903121561196f57600080fd5b865161197a81611702565b602088015190965067ffffffffffffffff8082111561199857600080fd5b6119a48a838b016118ce565b965060408901519150808211156119ba57600080fd5b506119c789828a016118ce565b9450506119d66060880161189e565b92506119e46080880161189e565b915060a087015190509295509295509295565b81810381811115611a0a57611a0a61180f565b92915050565b601f821115611a5a57600081815260208120601f850160051c81016020861015611a375750805b601f850160051c820191505b81811015611a5657828155600101611a43565b5050505b505050565b815167ffffffffffffffff811115611a7957611a7961183e565b611a8d81611a878454611854565b84611a10565b602080601f831160018114611ac25760008415611aaa5750858301515b600019600386901b1c1916600185901b178555611a56565b600085815260208120601f198616915b82811015611af157888601518255948401946001909101908401611ad2565b5085821015611b0f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212201cf139b0a2fe6e6309cfca6eaa6de2dc5cee1480a8cc29bb1f778953df0e682e64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "createJob(address,string,string,uint256,uint256)": {
        "params": {
          "hirer": "the real client funding the job"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptJob(uint256)": {
        "notice": "Worker accepts job"
      },
      "cancelJob(uint256)": {
        "notice": "Client cancels before worker accepts"
      },
      "completeJob(uint256)": {
        "notice": "Client marks job as completed → releases payment"
      },
      "createJob(address,string,string,uint256,uint256)": {
        "notice": "Client posts a job with budget locked in escrow"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/JobFactory.sol:JobFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 675,
        "contract": "contracts/JobFactory.sol:JobFactory",
        "label": "coreToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 678,
        "contract": "contracts/JobFactory.sol:JobFactory",
        "label": "profileContract",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IProfile)647"
      },
      {
        "astId": 680,
        "contract": "contracts/JobFactory.sol:JobFactory",
        "label": "jobCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 685,
        "contract": "contracts/JobFactory.sol:JobFactory",
        "label": "jobs",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Job)672_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IProfile)647": {
        "encoding": "inplace",
        "label": "contract IProfile",
        "numberOfBytes": "20"
      },
      "t_enum(JobStatus)654": {
        "encoding": "inplace",
        "label": "enum JobFactory.JobStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Job)672_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct JobFactory.Job)",
        "numberOfBytes": "32",
        "value": "t_struct(Job)672_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Job)672_storage": {
        "encoding": "inplace",
        "label": "struct JobFactory.Job",
        "members": [
          {
            "astId": 656,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 658,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "client",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 660,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "worker",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 662,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "title",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 664,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "metadataURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 666,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "budget",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 668,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "deadline",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 671,
            "contract": "contracts/JobFactory.sol:JobFactory",
            "label": "status",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(JobStatus)654"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}